#!/bin/sh 

# This script is used to bootstrap creating an R package. 


echo "Creating Directories ------------------" 

# Put on different lines for better printing and feedback
mkdir -v -p R/
mkdir -v -p tests/
mkdir -v -p man/
mkdir -v -p vignettes/
mkdir -v -p inst/


echo "Creating Files ------------------"
echo "Creating Package Description in Description ------------------"
echo "Enter Package Name: " && read PACKAGE_NAME
echo "Enter Package Title: " && read PACKAGE_TITLE
echo "Enter Package Description: " && read PACKAGE_DESCRIPTION
echo "Enter Package Author: " && read PACKAGE_AUTHOR
echo "Enter Package Author Email: " && read PACKAGE_AUTHOR_EMAIL
echo "Enter Package Licence: " && read PACKAGE_LICENSE


AUTHOR_FIRST_NAME=$(echo $PACKAGE_AUTHOR | cut -d " " -f 1)
AUTHOR_LAST_NAME=$(echo $PACKAGE_AUTHOR | cut -d " " -f 2)

cat > DESCRIPTION << EOF
Package: ${PACKAGE_NAME}
Title: ${PACKAGE_TITLE}
Version: 0.0.0.9000
Date: $(date +%Y-%m-%d)
Authors@R: person("${AUTHOR_FIRST_NAME}", "$AUTHOR_LAST_NAME", email = "${PACKAGE_AUTHOR_EMAIL}", role = c("aut", "cre"), comment = c(ORCID = "YOUR-ORCID-ID"))
Description: ${PACKAGE_DESCRIPTION}
License: ${PACKAGE_LICENSE}
LazyData:
Depends:
Imports:
LinkingTo:
Suggests:
Encoding: UTF-8
RoxygenNote:
EOF


echo "Creating NAMESPACE ------------------"

cat > NAMESPACE << 'EOF'
# Generated by roxygen2: do not edit by hand
# Please edit documentation in R/
EOF


echo "Creating .Renviron ------------------"
cat > .Renviron << 'EOF'
# This file is used to set environment variables for Renviron
# See https://stat.ethz.ch/R-manual/R-devel/library/base/html/Startup.html
EOF


echo "Creating .Rprofile ------------------"

cat > .Rprofile << 'EOF'
# This file is  run on startup of an R session 
EOF



echo "Creating Makefile ------------------"


cat > Makefile << FF


all: build check install

build:
	R CMD build .

check:
	R CMD check ${PACKAGE_NAME}_*.tar.gz

install:
	R CMD INSTALL ${PACKAGE_NAME}_*.tar.gz

FF

echo "Creating .gitignore ------------------"

cat > .gitignore << 'EOF'
docs
.RData
.Rproj.user
.Rhistory
inst/doc
vignettes/*.R

EOF


echo "Creating .Rbuildignore ------------------"

cat > .Rbuildignore << 'EOF'
^.*\.Rproj
^.*\.Rproj\.user
^.*\.Rhistory
^.*\.RData
^.*\.Rproj\.user

EOF


echo "Creating README.rmd ------------------"

cat > README.Rmd << 'EOF'
---
output: github_document
---

<!-- README.md is generated from README.Rmd. Please edit that file -->

```{r, include = FALSE }
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = '#>',
  fig.path = 'man/figures/README-',
  out.width = '100%'
)
```
# Package Name 
# Overview

<!-- High Level Description -->

# Installation 

<!-- How to install -->

```{r, eval = FALSE}
install.packages('devtools')
devtools::install_github('USER/${PACKAGE_NAME}')

```

# Usage 

<!-- The main aims -->

# License

- ${PACKAGE_LICENSE}

EOF


echo "Creating README.md -------------------"



R -e 'if (!require("rmarkdown")) install.packages("rmarkdown"); rmarkdown::render("README.Rmd")'


echo "Test creating Package ------------------"

make 

echo "Finished ------------------"

exit 0


